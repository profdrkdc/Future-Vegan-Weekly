# .github/workflows/weekly.yml

name: Weekly Content Generation and Deployment

on:
  schedule:
    - cron: '0 8 * * 5'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      changes_detected: ${{ steps.commit.outputs.changes_detected }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Install dependencies
        run: pip install -r requirements.txt

      # --- Branch 1: Main -> OpenRouter Kimi ---
      - name: Generate Content (main -> Kimi)
        if: github.ref == 'refs/heads/main'
        env:
          AI_PROVIDER: openrouter_kimi
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          python3 -m src.fetch
          python3 -m src.curate
          python3 -m src.draft
          LONGREAD_TOPIC=$(python3 -m src.select_topic) && [ -n "$LONGREAD_TOPIC" ]
          LONGREAD_FILENAME="content/longread_$(date +%Y-%m-%d)_en.md"
          python3 -m src.generate_longread "$LONGREAD_TOPIC" -o "$LONGREAD_FILENAME"

      # --- Branch 2: gemini-api -> Google Gemini ---
      - name: Generate Content (gemini-api -> Google)
        if: github.ref == 'refs/heads/gemini-api'
        env:
          AI_PROVIDER: google
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: |
          python3 -m src.fetch
          python3 -m src.curate
          python3 -m src.draft
          LONGREAD_TOPIC=$(python3 -m src.select_topic) && [ -n "$LONGREAD_TOPIC" ]
          LONGREAD_FILENAME="content/longread_$(date +%Y-%m-%d)_en.md"
          python3 -m src.generate_longread "$LONGREAD_TOPIC" -o "$LONGREAD_FILENAME"

      # --- Branch 3: mistral-api -> OpenRouter Mistral ---
      - name: Generate Content (mistral-api -> Mistral)
        if: github.ref == 'refs/heads/mistral-api'
        env:
          AI_PROVIDER: openrouter_mistral
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          python3 -m src.fetch
          python3 -m src.curate
          python3 -m src.draft
          LONGREAD_TOPIC=$(python3 -m src.select_topic) && [ -n "$LONGREAD_TOPIC" ]
          LONGREAD_FILENAME="content/longread_$(date +%Y-%m-%d)_en.md"
          python3 -m src.generate_longread "$LONGREAD_TOPIC" -o "$LONGREAD_FILENAME"

      - name: Commit and push generated content
        id: commit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(ci): add weekly generated content"

  deploy-ghost:
    if: needs.build.outputs.changes_detected == 'true'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Publish to Ghost
        env:
          GHOST_ADMIN_API_URL: ${{ secrets.GHOST_ADMIN_API_URL }}
          GHOST_ADMIN_API_KEY: ${{ secrets.GHOST_ADMIN_API_KEY }}
        run: python3 src/publish_ghost.py