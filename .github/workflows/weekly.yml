# De naam van je GitHub Action
name: Generate Weekly Newsletter

# Wanneer moet deze Action draaien?
on:
  # 1. Een handmatige knop in de Actions-tab om te testen
  workflow_dispatch:

  # 2. Een vast schema (deze cron-job betekent 'elke maandag om 8:00 UTC')
  schedule:
    - cron: '0 8 * * 1'
  
  # 3. Draai ook bij een push naar een van deze specifieke branches
  push:
    branches:
      - main         # Voor de Kimi/OpenRouter versie
      - gemini-api   # Voor de Google Gemini versie

# De taken die de Action moet uitvoeren
jobs:
  generate-and-commit:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Python scripts to generate content
        env:
          # Gebruik de Kimi/OpenRouter key als we op de main branch zijn
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          # Gebruik de Google key als we op de gemini-api branch zijn
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: |
          # De python scripts op de uitgecheckte branch gebruiken de juiste logica
          python3 -m src.fetch
          python3 -m src.curate
          python3 -m src.draft

      - name: Commit and push new content
        run: |
          git config user.name "GitHub Action Bot"
          git config user.email "action@github.com"
          git add -f content/
          
          if git diff --staged --quiet; then
            echo "Geen wijzigingen in de nieuwsbrief om te committen."
          else
            git commit -m "Update wekelijkse nieuwsbrief"
            git push
          fi